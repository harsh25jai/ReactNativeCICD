# https://medium.com/@paramsingh_66174/ci-cd-pipeline-for-react-native-apps-98246237e29d
name: "iOS Build"

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
        default: "release"
      # publish:
      #   required: false
      #   type: boolean
      #   description: Publish to Appcenter
    # secrets:
    #   IOS_P12_BASE64:
    #     required: true
    #   IOS_MOBILEPROVISION_BASE64:
    #     required: true
    #   IOS_TEAM_ID:
    #     required: true
    #   IOS_CERTIFICATE_PASSWORD:
    #     required: true
    #   APPCENTER_TOKEN_IOS:
    #     required: true

jobs:
  build-ios:
    runs-on: macos-latest #Monterey
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Set up Ruby and cache gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # use your project's Ruby version
          bundler-cache: true
      
      - name: Directory
        run: pwd

      - name: Check development environment
        run: node -v && npm -v && ruby -v && xcodebuild -version && sw_vers

      - name: Install Node modules
        run: npm install
      
      - name: Install CocoaPods dependencies
        run: bundle install

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install pod dependencies
        run: cd ios && bundle exec pod install && cd ..

      - name: Build iOS
        run: cd ios && xcodebuild archive -workspace ReactNativeCICD.xcworkspace -scheme ReactNativeCICD -archivePath ReactNativeCICD.xcarchive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      # - name: Build iOS (Release)
      #   uses: yukiarrr/ios-build-action@v1
      #   with:
      #     project-path: ios/Timely.xcodeproj
      #     p12-base64: ${{ secrets.IOS_P12_BASE64 }}
      #     mobileprovision-base64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}
      #     code-signing-identity: "Apple Distribution"
      #     certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      #     team-id: ${{ secrets.IOS_TEAM_ID }}
      #     workspace-path: ios/Timely.xcworkspace
      #     output-path: "Timely.ipa"

      - name: Upload Artifact - iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: "AppIPA"
          path: "ios/ReactNativeCICD.xcarchive/Products/Applications"

  # publish-to-appcenter:
  #   if: ${{ inputs.publish == true }}
  #   runs-on: ubuntu-latest
  #   needs: build-ios
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: Timely.ipa
  #         path: "ios/"

  #     - name: set up JDK 1.8
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.8

  #     - name: Upload artifact to App Center
  #       uses: wzieba/AppCenter-Github-Action@v1
  #       with:
  #         appName: paramsinghvc/Timely-iOS
  #         token: ${{secrets.APPCENTER_TOKEN_IOS}}
  #         group: UKInternal
  #         file: "ios/Timely.ipa"
  #         notifyTesters: true
  #         debug: false
